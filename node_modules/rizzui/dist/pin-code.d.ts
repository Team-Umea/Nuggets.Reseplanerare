import * as react_jsx_runtime from 'react/jsx-runtime';
import React__default from 'react';

declare const pinCodeStyles: {
    base: string;
    disabled: string;
    error: string;
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    rounded: {
        none: string;
        sm: string;
        md: string;
        lg: string;
        full: string;
    };
    variant: {
        flat: string;
        outline: string;
    };
};
interface PinCodeProps extends Omit<React__default.InputHTMLAttributes<HTMLInputElement>, 'size' | 'type' | 'value'> {
    /** Pass setState to get back the pin code value */
    setValue?: React__default.Dispatch<React__default.SetStateAction<string | number | undefined>>;
    /** This Pin Code component only support these two types */
    type?: 'text' | 'number';
    /** Mask and unmask to hide and show pin code */
    mask?: boolean;
    /** Set pin code length */
    length?: number;
    /** Make pin code horizontally center */
    center?: boolean;
    /** Set placeholder text */
    placeholder?: string;
    /** The size of the component. `"sm"` is equivalent to the dense input styling. */
    size?: keyof typeof pinCodeStyles.size;
    /** The rounded variants are: */
    rounded?: keyof typeof pinCodeStyles.rounded;
    /** The variants of the component are: */
    variant?: keyof typeof pinCodeStyles.variant;
    /** Show error message using this prop */
    error?: string;
    /** Add custom classes for the input filed extra style */
    inputClassName?: string;
    /** This prop allows you to customize the error message style */
    errorClassName?: string;
}
declare function PinCode({ type, defaultValue, mask, length, setValue, center, size, rounded, variant, placeholder, error, className, inputClassName, errorClassName, ...props }: PinCodeProps): react_jsx_runtime.JSX.Element;
declare namespace PinCode {
    var displayName: string;
}

export { PinCode, type PinCodeProps };
