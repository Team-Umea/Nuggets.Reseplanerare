import * as react_jsx_runtime from 'react/jsx-runtime';
import React__default from 'react';

declare const badgeStyles: {
    base: string;
    outlineRing: string;
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    dot: {
        size: {
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    rounded: {
        readonly none: "rounded-none";
        readonly sm: "rounded-sm";
        readonly md: "rounded-md";
        readonly lg: "rounded-lg";
        readonly pill: "rounded-full";
    };
    variant: {
        solid: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                success: string;
                warning: string;
                danger: string;
                info: string;
            };
        };
        flat: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                success: string;
                warning: string;
                danger: string;
                info: string;
            };
        };
        outline: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                success: string;
                warning: string;
                danger: string;
                info: string;
            };
        };
    };
};
interface BadgeProps extends React__default.HTMLAttributes<HTMLSpanElement> {
    /** Change badge color */
    color?: keyof (typeof badgeStyles.variant)['solid']['color'];
    /** The variants of the component are: */
    variant?: keyof typeof badgeStyles.variant;
    /** The size of the component. `"sm"` is equivalent to the dense badge styling. */
    size?: keyof typeof badgeStyles.size;
    /** Render badge as a dot */
    renderAsDot?: boolean;
    /** Set a outline ring. It is useful for the overlapping UI. */
    enableOutlineRing?: boolean;
    /** The rounded variants are: */
    rounded?: keyof typeof badgeStyles.rounded;
    /** Add custom classes for extra style */
    className?: string;
}
/**
 * Badge is a small overlapped UI item which indicates a status, notification, or event that appears in relativity with the underlying object.
 */
declare function Badge({ renderAsDot, size, color, variant, rounded, enableOutlineRing, children, className, ...props }: React__default.PropsWithChildren<BadgeProps>): react_jsx_runtime.JSX.Element;
declare namespace Badge {
    var displayName: string;
}

export { Badge, type BadgeProps };
