import React__default from 'react';

declare const actionIconStyles: {
    base: string;
    disabled: string;
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    rounded: {
        none: string;
        sm: string;
        md: string;
        lg: string;
        full: string;
    };
    spinnerSize: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    variant: {
        solid: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                danger: string;
            };
        };
        flat: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                danger: string;
            };
        };
        outline: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                danger: string;
            };
        };
        text: {
            base: string;
            color: {
                primary: string;
                secondary: string;
                danger: string;
            };
        };
    };
};
type ActionIconProps = {
    as?: 'button' | 'span';
    /** Set the original html type of button */
    type?: 'button' | 'submit' | 'reset';
    /** Use SVG icon as a children */
    children: React__default.ReactNode;
    /** Set the loading status of button */
    isLoading?: boolean;
    /** The variants of the component are: */
    variant?: keyof typeof actionIconStyles.variant;
    /** The size of the component. `"sm"` is equivalent to the dense button styling. */
    size?: keyof typeof actionIconStyles.size;
    /** The rounded variants are: */
    rounded?: keyof typeof actionIconStyles.rounded;
    /** Change button color */
    color?: keyof (typeof actionIconStyles.variant)['solid']['color'];
    /** Add custom actionIconStyles for extra style */
    className?: string;
} & React__default.ButtonHTMLAttributes<HTMLButtonElement> & React__default.HTMLAttributes<HTMLSpanElement>;
/**
 * Primary action icon button to trigger an operation. Here is the API documentation of the ActionIcon component.
 * And the rest of the props are the same as the original html button.
 * You can use props like `id`, `title`, `onClick`, `onFocus`, `onBlur` etc.
 */
declare const ActionIcon: React__default.ForwardRefExoticComponent<{
    as?: "button" | "span";
    /** Set the original html type of button */
    type?: "button" | "submit" | "reset";
    /** Use SVG icon as a children */
    children: React__default.ReactNode;
    /** Set the loading status of button */
    isLoading?: boolean;
    /** The variants of the component are: */
    variant?: keyof typeof actionIconStyles.variant;
    /** The size of the component. `"sm"` is equivalent to the dense button styling. */
    size?: keyof typeof actionIconStyles.size;
    /** The rounded variants are: */
    rounded?: keyof typeof actionIconStyles.rounded;
    /** Change button color */
    color?: keyof (typeof actionIconStyles.variant)["solid"]["color"];
    /** Add custom actionIconStyles for extra style */
    className?: string;
} & React__default.ButtonHTMLAttributes<HTMLButtonElement> & React__default.HTMLAttributes<HTMLSpanElement> & React__default.RefAttributes<HTMLButtonElement>>;

export { ActionIcon, type ActionIconProps };
