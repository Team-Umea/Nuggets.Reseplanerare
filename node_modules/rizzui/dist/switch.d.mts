import React__default from 'react';
import { l as labelStyles } from './label-size-BLtICllx.mjs';

declare const switchLabelStyles: {
    weight: {
        readonly normal: "font-normal";
        readonly medium: "font-medium";
        readonly semibold: "font-semibold";
        readonly bold: "font-bold";
    };
    size: {
        readonly sm: "text-xs mb-1";
        readonly md: "text-sm mb-1.5";
        readonly lg: "text-sm mb-1.5";
        readonly xl: "text-base mb-2";
    };
    margin: {
        left: {
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
        right: {
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
};
declare const switchStyles: {
    base: string;
    active: string;
    disabled: string;
    rounded: {
        readonly none: "rounded-none";
        readonly sm: "rounded-sm";
        readonly md: "rounded-md";
        readonly lg: "rounded-lg";
        readonly pill: "rounded-full";
    };
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    icon: {
        size: {
            sm: string;
            md: string;
            lg: string;
            xl: string;
        };
    };
    variant: {
        flat: string;
        outline: string;
    };
};
interface SwitchProps extends Omit<React__default.InputHTMLAttributes<HTMLInputElement>, 'size'> {
    /** Set field label */
    label?: React__default.ReactNode;
    /** Change label direction */
    labelPlacement?: keyof typeof switchLabelStyles.margin;
    /** Set font weight for label */
    labelWeight?: keyof typeof labelStyles.weight;
    /** The rounded variants are: */
    rounded?: keyof typeof switchStyles.rounded;
    /** The size of the component. */
    size?: keyof typeof switchLabelStyles.size;
    /** Whether the switch is disabled */
    disabled?: boolean;
    /** The variants of the component are: */
    variant?: keyof typeof switchStyles.variant;
    /** Set custom icon when the switch is on */
    onIcon?: React__default.ReactNode;
    /** Set custom icon when the switch is off */
    offIcon?: React__default.ReactNode;
    /** Add helper text. It could be string or a React component */
    helperText?: React__default.ReactNode;
    /** Show error message using this prop */
    error?: string;
    /** Add custom classes for switch label */
    labelClassName?: string;
    /** Add custom classes of switch wrapper for extra style */
    switchClassName?: string;
    /** Add custom classes of switch handler for extra style */
    switchKnobClassName?: string;
    /** This prop allows you to customize the error message style */
    errorClassName?: string;
    /** This prop allows you to customize the helper message style */
    helperClassName?: string;
    /** Add custom classes to the root of the component */
    className?: string;
}
declare const Switch: React__default.ForwardRefExoticComponent<SwitchProps & React__default.RefAttributes<HTMLInputElement>>;

export { Switch, type SwitchProps };
