import * as react_jsx_runtime from 'react/jsx-runtime';
import React__default from 'react';

declare const announcementStyles: {
    base: string;
    bgColor: {
        background: string;
        muted: string;
    };
    size: {
        sm: string;
        md: string;
        lg: string;
        xl: string;
    };
    rounded: {
        readonly none: "rounded-none";
        readonly sm: "rounded-sm";
        readonly md: "rounded-md";
        readonly lg: "rounded-lg";
        readonly pill: "rounded-full";
    };
    color: {
        primary: string;
        secondary: string;
        danger: string;
        info: string;
        success: string;
        warning: string;
    };
};
interface AnnouncementProps {
    /** Size of the component */
    size?: keyof typeof announcementStyles.size;
    /** The rounded variants are: */
    rounded?: keyof typeof announcementStyles.rounded;
    /** Choose color variations */
    color?: keyof typeof announcementStyles.color;
    /** Background color of the component */
    bgColor?: keyof typeof announcementStyles.bgColor;
    /** Pass badge text to have badge at the beginning */
    badgeText?: string;
    /** Pass highlighted text at the beginning */
    highlightedText?: string;
    /** Pass className to customize announcement design */
    className?: string;
    /** Place icon at the beginning */
    startIcon?: React__default.ReactNode;
    /** Place icon at the end */
    endIcon?: React__default.ReactNode;
    /** Pass badgeClassName to style badge */
    badgeClassName?: string;
    /** Pass hightlightedTextClassName to style highlighted text */
    highlightedTextClassName?: string;
}
declare const Announcement: {
    ({ size, rounded, color, bgColor, badgeText, highlightedText, children, startIcon, endIcon, className, badgeClassName, highlightedTextClassName, }: React__default.PropsWithChildren<AnnouncementProps>): react_jsx_runtime.JSX.Element;
    displayName: string;
};

export { Announcement, type AnnouncementProps };
